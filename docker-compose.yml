version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/videotext
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./models:/app/models
      - ./temp:/app/temp
      - ./output:/app/output
      - ./uploads:/app/uploads
    depends_on:
      - db
      - redis
    networks:
      - videotext-network

  worker:
    build: .
    command: celery -A app.celery_app worker --loglevel=info --concurrency=2
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/videotext
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    volumes:
      - ./models:/app/models
      - ./temp:/app/temp
      - ./output:/app/output
      - ./uploads:/app/uploads
    depends_on:
      - db
      - redis
    networks:
      - videotext-network

  beat:
    build: .
    command: celery -A app.celery_app beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/videotext
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis
    networks:
      - videotext-network

  streamlit:
    build: .
    command: streamlit run app/frontend/main.py --server.port=8501 --server.address=0.0.0.0
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:8000
    depends_on:
      - api
    networks:
      - videotext-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=videotext
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - videotext-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - videotext-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - videotext-network

volumes:
  postgres_data:

networks:
  videotext-network:
    driver: bridge