apiVersion: v1
kind: Namespace
metadata:
  name: video-text-detection

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: video-text-detection
data:
  DATABASE_URL: "postgresql://postgres:password@postgres:5432/videotext"
  REDIS_URL: "redis://redis:6379/0"
  CELERY_BROKER_URL: "redis://redis:6379/0"
  CELERY_RESULT_BACKEND: "redis://redis:6379/0"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  ENABLE_METRICS: "true"
  GPU_ENABLED: "true"
  BATCH_SIZE: "32"
  CONFIDENCE_THRESHOLD: "0.5"

---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: video-text-detection
type: Opaque
data:
  SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQta2V5LWNoYW5nZS1pbi1wcm9kdWN0aW9u
  AWS_ACCESS_KEY_ID: ""
  AWS_SECRET_ACCESS_KEY: ""
  S3_BUCKET_NAME: ""

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: video-text-api
  namespace: video-text-detection
  labels:
    app: video-text-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: video-text-api
  template:
    metadata:
      labels:
        app: video-text-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api
        image: video-text-detection:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REDIS_URL
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: SECRET_KEY
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: models
          mountPath: /app/models
        - name: temp-storage
          mountPath: /app/temp
        - name: output-storage
          mountPath: /app/output
      volumes:
      - name: models
        persistentVolumeClaim:
          claimName: models-pvc
      - name: temp-storage
        persistentVolumeClaim:
          claimName: temp-storage-pvc
      - name: output-storage
        persistentVolumeClaim:
          claimName: output-storage-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  namespace: video-text-detection
  labels:
    app: celery-worker
spec:
  replicas: 2
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      containers:
      - name: worker
        image: video-text-detection:latest
        command: ["celery", "-A", "app.celery_app", "worker", "--loglevel=info", "--concurrency=2"]
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: REDIS_URL
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
            nvidia.com/gpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: "1"
        volumeMounts:
        - name: models
          mountPath: /app/models
        - name: temp-storage
          mountPath: /app/temp
        - name: output-storage
          mountPath: /app/output
      volumes:
      - name: models
        persistentVolumeClaim:
          claimName: models-pvc
      - name: temp-storage
        persistentVolumeClaim:
          claimName: temp-storage-pvc
      - name: output-storage
        persistentVolumeClaim:
          claimName: output-storage-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: video-text-detection
  labels:
    app: celery-beat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-beat
  template:
    metadata:
      labels:
        app: celery-beat
    spec:
      containers:
      - name: beat
        image: video-text-detection:latest
        command: ["celery", "-A", "app.celery_app", "beat", "--loglevel=info"]
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamlit-frontend
  namespace: video-text-detection
  labels:
    app: streamlit-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: streamlit-frontend
  template:
    metadata:
      labels:
        app: streamlit-frontend
    spec:
      containers:
      - name: frontend
        image: video-text-detection:latest
        command: ["streamlit", "run", "app/frontend/main.py", "--server.port=8501", "--server.address=0.0.0.0"]
        ports:
        - containerPort: 8501
        env:
        - name: API_BASE_URL
          value: "http://video-text-api-service:8000"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: video-text-detection
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_DB
          value: videotext
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: video-text-detection
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: redis-storage
          mountPath: /data
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: video-text-api-service
  namespace: video-text-detection
  labels:
    app: video-text-api
spec:
  selector:
    app: video-text-api
  ports:
  - name: http
    port: 8000
    targetPort: 8000
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: streamlit-service
  namespace: video-text-detection
  labels:
    app: streamlit-frontend
spec:
  selector:
    app: streamlit-frontend
  ports:
  - name: http
    port: 8501
    targetPort: 8501
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: video-text-detection
  labels:
    app: postgres
spec:
  selector:
    app: postgres
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: video-text-detection
  labels:
    app: redis
spec:
  selector:
    app: redis
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: models-pvc
  namespace: video-text-detection
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: temp-storage-pvc
  namespace: video-text-detection
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 50Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: output-storage-pvc
  namespace: video-text-detection
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 100Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: video-text-detection
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: video-text-detection-ingress
  namespace: video-text-detection
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/client-max-body-size: "500m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  rules:
  - host: api.videotext.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: video-text-api-service
            port:
              number: 8000
  - host: app.videotext.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: streamlit-service
            port:
              number: 8501

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: video-text-api-hpa
  namespace: video-text-detection
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: video-text-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: celery-worker-hpa
  namespace: video-text-detection
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: celery-worker
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80